import org.gradle.api.internal.artifacts.dependencies.DefaultSelfResolvingDependency

plugins {
    id 'com.jfrog.bintray' version '1.8.4'
}

apply plugin: 'maven-publish'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: 'maven-push.gradle'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultConfig {
        consumerProguardFiles 'proguard-rules.pro'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.13.0"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    compileOnly "com.google.android.gms:play-services-gcm:15.0.1"
    compileOnly "com.google.firebase:firebase-core:16.0.1"
    compileOnly "com.google.firebase:firebase-messaging:17.1.0"

    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

    lintChecks project(':pushnotifications-lint')
}

repositories {
    mavenCentral()
}

bintray {
    user = bintray_user
    key = bintry_api_key
    publish = true
    override = true
    publications = ['Release']
    pkg {
        repo = 'maven'
        name = "$POM_ARTIFACT_ID"
        userOrg = "pusher"
        licenses = ["$POM_LICENCE_NAME"]
        vcsUrl = "$POM_SCM_URL"
        version {
            name = "$VERSION_NAME"
            desc = "$POM_DESCRIPTION"
            released = new Date()
            vcsTag = "$VERSION_NAME"
            gpg {
                sign = true
                passphrase = System.getenv('SONATYPE_GPG_PASSPHRASE')
            }
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name 'MIT'
            url "$POM_LICENCE_URL"
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'luismfonseca'
            name 'Lu√≠s Fonseca'
            email 'luis@pusher.com'
        }
    }

    scm {
        url "$POM_SCM_URL"
    }
}

publishing {
    publications {
        Release(MavenPublication) {
            artifact("$buildDir/outputs/aar/pushnotifications-release.aar")
            groupId GROUP
            artifactId POM_ARTIFACT_ID
            version VERSION_NAME

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if(it instanceof DefaultSelfResolvingDependency) {
                        // skip it
                    } else {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                def root = asNode()
                root.appendNode('description', "$POM_DESCRIPTION")
                root.appendNode('name', "$POM_NAME")
                root.appendNode('url', "$POM_URL")
                root.children().last() + pomConfig
            }
        }
    }
}
