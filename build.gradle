// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.versions = [
        kotlin: '1.2.51',

        androidPlugin: '3.0.0',
        androidTools: '27.0.2',
        androidLintTools: '26.0.0',
    ]

    repositories {
        google()
        jcenter()
    }

    ext {
        bintray_user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        bintry_api_key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.google.gms:google-services:4.0.1'
    }

    ext.deps = [
        androidPlugin: "com.android.tools.build:gradle:${versions.androidPlugin}",

        lint: [
            'core': "com.android.tools.lint:lint:${versions.androidLintTools}",
            'api': "com.android.tools.lint:lint-api:${versions.androidLintTools}",
            'checks': "com.android.tools.lint:lint-checks:${versions.androidLintTools}",
            'tests': "com.android.tools.lint:lint-tests:${versions.androidLintTools}",
        ],
    ]
}

allprojects {
    repositories {
        google()
        jcenter()
    }
    if (tasks.findByName('bintrayUpload')) {
        task verifyBintrayCredentials {
            def out = []
            if (bintray_user == null) out += "Missing `bintrayUser` property or BINTRAY_USER env var"
            if (bintry_api_key == null) out += "Missing `bintrayApiKey` property or BINTRAY_API_KEY env var"
            if (!out.isEmpty()) throw new IllegalStateException("\n" + out.join("\n"))
        }
        bintrayUpload.doFirst verifyBintrayCredentials
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
